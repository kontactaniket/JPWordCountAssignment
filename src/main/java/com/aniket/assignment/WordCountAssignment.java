package com.aniket.assignment;import org.json.JSONObject;import java.io.IOException;import java.nio.file.Files;import java.nio.file.Path;import java.util.List;import java.util.Map;import java.util.Scanner;import java.util.StringTokenizer;import java.util.concurrent.ConcurrentHashMap;public class WordCountAssignment {    static String regex = "[^a-zA-Z0-9-\\s]";    static String space = "\s";    public static void main(String[] args) {        if(args==null || args.length==0){            System.out.print("No filename sent!!!");            return;        }        String path = new Scanner(args[0]).next();        try {            List<String> fileLines = Files.readAllLines(Path.of(path));            System.out.println(new JSONObject(countWord(fileLines)));        } catch (IOException ex) {            System.out.print("Invalid path received!!!");        }    }    public static Map<String, Integer> countWord(List<String> fileLines) {        Map<String, Integer> wordCountMap = new ConcurrentHashMap<>();        // Parallel processing of lines in files        fileLines.parallelStream().forEach(line->{            String token;            line = line.replaceAll(regex, space).toLowerCase();            StringTokenizer st = new StringTokenizer(line, space);            while(st.hasMoreTokens()) {                token = st.nextToken();                if(!token.equals(space)&&                        wordCountMap.putIfAbsent(token, 1)!=null){                    wordCountMap.merge(token,1, Integer::sum);                }            }        });        return wordCountMap;    }}